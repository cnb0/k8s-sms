apiVersion: v1
kind: Namespace
metadata:
  name: sms

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: server-api
  namespace: sms
data:
  server: |
    from flask import Flask, json
    companies = [{"id": 1, "name": "Company One"}, {"id": 2, "name": "Company Two"}]
    services = [{"path": "/", "method": "GET", "name": "services list"}, {"path": "/companies", "method": "GET", "name": "companies list"}]
    api = Flask(__name__)
    @api.route('/companies', methods=['GET'])
    def get_companies():
      return json.dumps(companies)
    @api.route('/', methods=['GET'])
    def routes():
      return json.dumps(services)
    if __name__ == '__main__':
      api.run()
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: app
  namespace: sms
  annotations:
    medinvention.dev/sms.group: app
    medinvention.dev/sms.port: "5000"
    medinvention.dev/sms.service: app-service
spec:
  selector:
    matchLabels:
      run: app
  replicas: 1
  template:
    metadata:
      labels:
        run: app
    spec:
      containers:
      - name: server
        image: python
        command: ['sh', '-c', 'pip install flask && python /var/static/server']
        ports:
          - containerPort: 5000
        volumeMounts:
          - name: static-volume
            mountPath: /var/static
      volumes:
        - name: static-volume
          configMap:
            name: server-api
---

apiVersion: v1
kind: Service
metadata:
  name: app-service
  namespace: sms
spec:
  ports:
  - name: http
    port: 80
    targetPort: 5000
  selector:
    run: app
